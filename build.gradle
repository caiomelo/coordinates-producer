buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'com.greenmile.coordinates.producer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.springframework.boot:spring-boot-starter-security')
    
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    
    implementation('org.springframework.boot:spring-boot-starter-data-redis')
    implementation('org.springframework.session:spring-session-core')

    implementation('commons-io:commons-io:2.6')
    
    implementation('org.springframework.kafka:spring-kafka')
    
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.springframework.security:spring-security-test')
    
    testImplementation('de.flapdoodle.embed:de.flapdoodle.embed.mongo')
    testImplementation("com.github.kstyrc:embedded-redis:0.6")
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.1"
}

jacocoTestReport {
    description = "Generates JaCoCo test coverage report"
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination = "${buildDir}/reports/coverage"
    }
}

